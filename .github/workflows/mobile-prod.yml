name: Mobile - Build & Publish release
on:
  push:
    tags:
      - '*.*.*.rc'

permissions:
  contents: write
  packages: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Run Android Unit Tests
        run: ./gradlew testDebugUnitTest
        working-directory: "./mobile"

      - name: Build APK
        run: ./gradlew :app:assembleRelease
        working-directory: "./mobile"

      - name: Upload APK Package
        uses: actions/upload-artifact@v4
        with:
          name: apkPackage
          path: "./mobile/app/build/outputs/apk/release/app-release-unsigned.apk"
          retention-days: 1
          if-no-files-found: 'error'

  publish:
    needs: [build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Download APK Package
        uses: actions/download-artifact@v4
        with:
          name: apkPackage

      - name: Extract tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Production ${{ env.TAG_NAME }}
          prerelease: false
          draft: false

      - name: Rename packages
        run: |
          mv app-release-unsigned.apk area.apk

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./area.apk"
          asset_name: "area.apk"
          asset_content_type: application/vnd.android.package-archive

  check-tag:
    needs: [publish]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Delete tag
        run: |
          git fetch --tags
          git tag -d $TAG_NAME
          git push origin --delete $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}