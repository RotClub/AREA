name: Mobile - Build & Publish release
on:
  push:
    tags:
      - '*.*.*.rc'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set Gradle properties
        run: |
          echo "org.gradle.jvmargs=-Xmx4096m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> gradle.properties
        working-directory: "./mobile"

      - name: Run Android Unit Tests
        run: ./gradlew testDebugUnitTest
        working-directory: "./mobile"

      - name: Build APK
        run: ./gradlew assembleRelease
        working-directory: "./mobile"

      - name: Upload APK Package
        uses: actions/upload-artifact@v4
        with:
          name: apkPackage
          path: "./mobile/composeApp/build/outputs/apk/release/composeApp-release.apk"
          retention-days: 1
          if-no-files-found: 'error'

  build-ios:
    runs-on: macos-latest
    env:
      DEBUG: false
    if: ${{ env.DEBUG == 'false' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v1
        with:
          java-version: 22

      - name: Set up Kotlin and Gradle environment
        uses: gradle/actions/setup-gradle@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build iOS framework (KMM)
        run: ./gradlew embedAndSignAppleFrameworkForXcode
        working-directory: "./mobile"

      - name: Build iOS App
        uses: yukiarrr/ios-build-action@v1.5.0
        with:
          project-path: mobile/ios-app
          scheme: ios-app
          configuration: Release
          code-signing-identity: ${{ secrets.IOS_CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.IOS_TEAM_ID }}

      - name: Upload IPA Package
        uses: actions/upload-artifact@v4
        with:
          name: ipaPackage
          path: "mobile/build/xcode-frameworks/ios-app.ipa"
          retention-days: 1
          if-no-files-found: 'error'

  publish:
    needs: [build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Download APK Package
        uses: actions/download-artifact@v4
        with:
          name: apkPackage

      - name: Download IPA Package
        uses: actions/download-artifact@v4
        with:
          name: ipaPackage

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Production ${{ github.ref }}
          prerelease: false
          draft: false

      - name: Rename packages
        run: |
          mv apkPackage/composeApp-debug.apk area.apk
          mv ipaPackage/ios-app.ipa area.ipa

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .
          asset_name: "area.apk"
          asset_content_type: application/vnd.android.package-archive

      - name: Upload IPA to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .
          asset_name: "area.ipa"
          asset_content_type: application/octet-stream

  check-tag:
    needs: [publish]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Delete tag
        run: |
          git fetch --tags
          git tag -d ${{ github.ref }}
          git push origin --delete ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}