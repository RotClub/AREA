generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum UserRole {
  USER
  API_USER
  ADMIN
}

enum Provider {
  DISCORD
  STEAM
  SPOTIFY
}

model User {
  id             Int       @id @unique @default(autoincrement())
  username       String    @default("")
  email          String    @unique
  role           UserRole  @default(USER)
  token          String    @unique
  hashedPassword String
  createdAt      DateTime  @default(now())
  services       Service[]
}

model Service {
  id                Int             @id @unique @default(autoincrement())
  serviceProviderId Int
  serviceProvider   ServiceProvider @relation(fields: [serviceProviderId], references: [id])
  metadata          Json?
  user              User?           @relation(fields: [userId], references: [id])
  userId            Int?
}

model ServiceProvider {
  id           Int       @id @unique @default(autoincrement())
  providerType Provider
  redirectUri  String
  Service      Service[]
}

model Program {
  id      Int      @id @unique @default(autoincrement())
  name    String
  actions Action[]
}

model Action {
  id        Int        @id @unique @default(autoincrement())
  programId Int?
  metadata  Json?
  program   Program?   @relation(fields: [programId], references: [id])
  reactions Reaction[]
}

model Reaction {
  id       Int     @id @unique @default(autoincrement())
  actionId Int?
  metadata Json?
  action   Action? @relation(fields: [actionId], references: [id])
}
